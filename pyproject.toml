[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=42",
  "setuptools-scm[toml]>=6.2",
]

[project]
name = "xpublish"
description = "Publish Xarray Datasets via a REST API."
readme = "README.md"
keywords = [
  "api",
  "xarray",
  "zarr",
]
license = { file = "LICENSE" }
maintainers = [
  { name = "Joe Hamman", email = "jhamman@ucar.edu" },
  { name = "Alex Kerney", email = "akerney@gmri.org" },
]
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
]
dynamic = [
  "dependencies",
  "version",
]
urls."documentation" = "https://xpublish.readthedocs.io/"
urls."repository" = "https://github.com/xpublish-community/xpublish"
entry-points."xpublish.plugin".dataset_info = "xpublish.plugins.included.dataset_info:DatasetInfoPlugin"
entry-points."xpublish.plugin".module_version = "xpublish.plugins.included.module_version:ModuleVersionPlugin"
entry-points."xpublish.plugin".plugin_info = "xpublish.plugins.included.plugin_info:PluginInfoPlugin"
entry-points."xpublish.plugin".zarr = "xpublish.plugins.included.zarr:ZarrPlugin"

[tool.setuptools]
packages = [
  "xpublish",
]

[tool.setuptools.dynamic]
dependencies = { file = [
  "requirements.txt",
] }

[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "dirty-tag"

[tool.black]
line-length = 100
skip-string-normalization = true

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
  "B", # flake8-bugbear
  "C",
  'D', # pydocstyle
  "E", # pycodestyle
  "F", # Pyflakes
  "I", # isort
  "W", # pycodestyle
  # "T4",
  "B9",
]
ignore = [
  "D100", # Missing docstring in public module
  "D107", # Missing docstring in `__init__`
  "D104", # Missing docstring in public package
  "D105", # Missing docstring in magic method
  # "E203",
  # "E266",
  "E501",
  # "W503",
  "E722",
  "E402",
  "C901",
]
exclude = [
  "tests/",
  "docs/",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "D103", # Missing docstring in public function
  "D205", # blank line between summary and description
  "D415", # first line should end with punctuation
]
"docs/*" = [
  "D101", # missing docstring in public class
  "D102", # missing docstring in public method
  "D103", # missing docstring in public function
]

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 18

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = [
  "xpublish",
]
known-third-party = [
  "cachey",
  "dask",
  "fastapi",
  "numcodecs",
  "numpy",
  "pandas",
  "pkg_resources",
  "pluggy",
  "pydantic",
  "pytest",
  "setuptools",
  "sphinx_autosummary_accessors",
  "starlette",
  "uvicorn",
  "xarray",
  "zarr",
]

[tool.ruff.lint.pydocstyle]
# Use Google style docstrings
convention = "google"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"
docstring-quotes = "double"

[tool.ruff.lint.flake8-bugbear]
# Allow fastapi.Depends and other dependency injection style function arguments
extend-immutable-calls = [
  "fastapi.Depends",
  "fastapi.Query",
  "fastapi.Path",
]

[tool.pytest.ini_options]
log_cli = true
log_level = "INFO"
addopts = "--cov=./ --cov-report=xml --verbose"
